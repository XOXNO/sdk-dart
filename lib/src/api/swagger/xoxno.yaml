openapi: 3.0.0
paths:
  /user/login:
    post:
      operationId: UserDataController_loginUser
      summary: Login and get access token
      parameters:
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "201":
          description: Access token and expiration time
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginAccessDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/{address}/network-account:
    get:
      operationId: UserDataController_retrieveUserMvxAccount
      summary: Get user network info
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: User network info response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserNetworkInfoDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/{address}/token-inventory:
    get:
      operationId: UserDataController_retrieveUserTokenBalance
      summary: Get User Token Inventory
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: User token inventory response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserTokenInventoryResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/network-account:
    post:
      operationId: UserDataController_retrieveBulkUserMvxAccount
      summary: Get user bulk network info
      parameters:
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        "201":
          description: User bulk network info response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserNetworkInfoDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/me/profile:
    get:
      operationId: UserDataController_retrieveMyProfile
      summary: Get user private profile response with email
      parameters: []
      responses:
        "200":
          description: User private profile info response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/{address}/profile:
    get:
      operationId: UserDataController_retrieveUserProfile
      summary: Get User Public Profile
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: User public profile response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
    patch:
      operationId: UserDataController_editUserProfile
      summary: Set user private profile
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateDTO"
      responses:
        "200":
          description: User private profile patch response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/me:
    get:
      operationId: UserDataController_retrieveUserMyProfile
      summary: Get me user profile
      parameters: []
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/me/settings:
    get:
      operationId: UserDataController_retrieveMySettings
      summary: Get user settings
      parameters: []
      responses:
        "200":
          description: User settings retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettingsDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/me/settings/notification-preferences:
    patch:
      operationId: UserDataController_setNotificationPreferences
      summary: Get user settings after update
      parameters:
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationPreferencesDto"
      responses:
        "200":
          description: User settings saved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettingsDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/me/settings/email:
    patch:
      operationId: UserDataController_updateEmailSettings
      summary: Path user email settings
      parameters:
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetEmailDto"
      responses:
        "200":
          description: User settings updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettingsDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
    delete:
      operationId: UserDataController_deleteEmailSettings
      summary: Delete user email settings
      parameters: []
      responses:
        "200":
          description: Delete settings successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettingsDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/me/settings/verify-email:
    post:
      operationId: UserDataController_verifyEmailAddress
      summary: Verify user pending email!
      parameters:
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyEmailDto"
      responses:
        "201":
          description: Email verification flow
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSettingsDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/{address}/upload-picture:
    put:
      operationId: UserDataController_setUserProfilePicture
      summary: Set user private profile
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        "200":
          description: User private profile patch response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/{address}/upload-banner:
    put:
      operationId: UserDataController_setUserBannerPicture
      summary: Set user private profile
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        "200":
          description: User private profile patch response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/{address}/reset-picture:
    put:
      operationId: UserDataController_resetUserProfilePicture
      summary: Set user private profile
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: User private profile patch response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/{address}/reset-banner:
    put:
      operationId: UserDataController_resetUserBanner
      summary: Set user private profile
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: User private profile patch response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/{tag}/creator/is-registered:
    get:
      operationId: UserDataController_retrieveUserTagIsCreator
      summary: Is tag registered true/false
      parameters:
        - name: tag
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Check if a tag is registered
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/{address}/creator/profile:
    get:
      operationId: UserDataController_retrieveUserCreatorProfile
      summary: Get creator profile information
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Creator profile information fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatorProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
    patch:
      operationId: CollectionDataController_editUserCreatorProfile
      summary: Update creator profile information
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatorProfileDto"
      responses:
        "200":
          description: Creator profile information updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatorProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - User
  /user/{address}/creator/upload-picture:
    put:
      operationId: UserDataController_setUserCreatorProfilePicture
      summary: Update creator profile information
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        "200":
          description: Creator profile information updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatorProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/{address}/creator/upload-banner:
    put:
      operationId: UserDataController_setUserCreatorBannerPicture
      summary: Update creator profile information
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        "200":
          description: Creator profile information updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatorProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/{address}/creator/reset-picture:
    put:
      operationId: UserDataController_resetUserCreatorProfilePicture
      summary: Update creator profile information
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Creator profile information updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatorProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/{address}/creator/reset-banner:
    put:
      operationId: UserDataController_resetUserCreatorBanner
      summary: Update creator profile information
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Creator profile information updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatorProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/{address}/favorite/collections:
    get:
      operationId: UserDataController_retrieveUserFavoriteCollections
      summary: Get user favorite collections
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: User favorite collections
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
        - User
  /user/favorite/{favoriteId}:
    get:
      operationId: UserDataController_retrieveUserFavorite
      summary: Check if user has liked an NFT
      parameters:
        - name: favoriteId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Like status checked successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckLikeStatusResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
        - User
      security:
        - bearer: []
  /user/{address}/follow:
    post:
      operationId: UserDataController_followUser
      summary: Follow or unfollow a user
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: User follow status updated
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
        - User
      security:
        - bearer: []
  /user/{address}/favorite/users:
    get:
      operationId: UserDataController_retrieveUserFavoriteUsers
      summary: Check user list of followed addresses
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: List of followed addresses
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
        - User
  /tokens:
    get:
      operationId: TokenDataController_retrieveTokens
      summary: Get tokens
      parameters:
        - name: identifier
          required: false
          in: query
          description: Comma separated token identifiers
          schema:
            type: string
        - name: category
          required: false
          in: query
          description: Comma separated token identifiers
          schema:
            type: string
      responses:
        "200":
          description: List of tokens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TokenDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Token
  /tokens/usd-price:
    get:
      operationId: TokenDataController_retrieveTokensPrice
      parameters:
        - name: identifier
          required: false
          in: query
          description: Comma separated token identifiers
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Token
  /tokens/egld/fiat-price:
    get:
      operationId: TokenDataController_retrieveEgldFiatPrice
      parameters:
        - name: fiatCurrencies
          required: false
          in: query
          description: Comma separated fiat currencies. Default is EUR
          schema:
            type: string
        - name: value
          required: false
          in: query
          description: Value to convert. Default is 1
          schema:
            type: number
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Token
  /tokens/xoxno:
    get:
      operationId: TokenDataController_retrieveXoxnoTokenInfo
      parameters: []
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Token
  /tokens/xoxno/info:
    get:
      operationId: TokenDataController_getXOXNOSummaryLending
      parameters: []
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Token
  /tokens/xoxno/liquid:
    get:
      operationId: TokenDataController_retrieveXoxnoLiquidTokenInfo
      parameters: []
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Token
  /liquid/xoxno/stats:
    get:
      operationId: TokenDataController_getXoxnoLiquidStats
      parameters: []
      responses:
        "200":
          description: Xoxno Liquid stats
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/XoxnoLiquidStatsDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Token
        - LiquidXOXNO
  /liquid/xoxno/rate:
    get:
      operationId: XoxnoLiquidScController_getExchangeRate
      parameters: []
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - LiquidXOXNO
  /liquid/xoxno/liquid-supply:
    get:
      operationId: XoxnoLiquidScController_getTotalLSSupply
      parameters: []
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - LiquidXOXNO
  /liquid/xoxno/staked:
    get:
      operationId: XoxnoLiquidScController_getTotalStaked
      parameters: []
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - LiquidXOXNO
  /ash/min-token-quantity:
    get:
      operationId: AshAggregatorController_getAccountCollectionDetails
      summary: Fetch swap routes
      parameters:
        - name: originalToken
          required: true
          in: query
          schema:
            type: string
        - name: originalTokenValue
          required: true
          in: query
          schema:
            type: string
        - name: paymentToken
          required: true
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Swap routes fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FetchSwapRoutesResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Ash Aggregator
  /nft/query:
    get:
      operationId: NftDataController_retrieveNfts
      parameters:
        - name: filter
          required: true
          in: query
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NftDocFilter"
          description: 'A JSON object representing the filter criteria. Example:
            {"includeCount":true,"top":25,"skip":0,"strictSelect":false}'
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Nft
  /nft/{identifier}/like:
    post:
      operationId: NftDataController_likeNft
      summary: Like an NFT
      parameters:
        - name: identifier
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: Like NFT response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LikeNftDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Nft
  /user/{address}/inventory-summary:
    get:
      operationId: NftDataController_retrieveUserInventorySummary
      summary: Get inventory summary for collections by user wallet
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
        - name: activeAuction
          required: false
          in: query
          description: Filter by active auctions
          schema:
            type: boolean
      responses:
        "200":
          description: List of inventory summaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InventorySummaryDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/{address}/offers:
    get:
      operationId: NftDataController_retrieveUserOffers
      summary: Get user offers
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
        - name: skip
          required: false
          in: query
          description: Number of items to skip
          schema:
            type: number
        - name: top
          required: false
          in: query
          description: Number of items to retrieve
          schema:
            type: number
        - name: type
          required: false
          in: query
          description: "Type of offers to retrieve: received | placed"
          schema:
            type: string
      responses:
        "200":
          description: User offers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUserOffersResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/{address}/favorite/nfts:
    get:
      operationId: NftDataController_retrieveUserFavoriteNfts
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
        - name: skip
          required: false
          in: query
          description: Number of items to skip
          schema:
            type: number
        - name: top
          required: false
          in: query
          description: Number of items to retrieve
          schema:
            type: number
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /collection/{collection}/attributes:
    get:
      operationId: NftDataController_retrieveCollectionAttributes
      summary: Get attributes
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Attributes
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AttributesExamplesDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /nft/{identifier}/offers:
    get:
      operationId: NftDataController_retrieveSingleNftOffers
      summary: Get single NFT offers
      parameters:
        - name: identifier
          required: true
          in: path
          schema:
            type: string
        - name: skip
          required: true
          in: query
          schema:
            type: number
        - name: top
          required: true
          in: query
          schema:
            type: number
      responses:
        "200":
          description: Single NFT offers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSingleNftOfferResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Nft
  /collection/{collection}/ranks:
    get:
      operationId: NftDataController_retrieveCollectionRanks
      summary: Fetch collection ranks
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: List of ranks order from 1 to the latest
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CollectionRanksDTO"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/{collection}/listings:
    get:
      operationId: NftDataController_retrieveCollectionListings
      summary: Get collection listings
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Listings of a collection
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListingsResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /nft/pinned:
    get:
      operationId: NftDataController_retrievePinnedCollection
      parameters: []
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Nft
  /nft/sign-withdraw:
    post:
      operationId: NftDataController_signListingWithdraw
      summary: Get signed data
      parameters:
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignWithdrawDto"
      responses:
        "201":
          description: Signed data and signature
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignDataDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Nft
  /collection/{collection}/sign-offer:
    post:
      operationId: NftDataController_signOffer
      summary: Get signed data
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignAcceptGlobalOfferDto"
      responses:
        "201":
          description: Signed data and signature
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignDataDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Collection
  /collection/{collection}/sign-mint:
    post:
      operationId: NftDataController_signMint
      summary: Get signed data
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignMintDto"
      responses:
        "201":
          description: Signed data and signature
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignDataDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Collection
  /nft/{identifier}:
    get:
      operationId: NftDataController_retrieveSingleNft
      parameters:
        - name: identifier
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Nft
  /collection/{collection}/profile:
    get:
      operationId: CollectionDataController_retrieveCollectionProfile
      summary: Get collection profile
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Collection profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
    patch:
      operationId: CollectionDataController_editCollectionProfile
      summary: Update collection profile
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectionProfileDto"
      responses:
        "200":
          description: Updated collection profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Collection
  /collection/{collection}/floor-price:
    get:
      operationId: CollectionDataController_retrieveCollectionFloorPrice
      summary: Get floor price of a collection
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
        - name: token
          required: true
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Floor price of the collection
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FloorPriceDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/floor-price:
    get:
      operationId: CollectionDataController_retrieveBulkCollectionFloorPrice
      parameters:
        - name: collection
          required: false
          in: query
          description: "A comma-separated list of collection tickers. For example:
            collection=TEST-123,TEST2-123. Maximum 10 collections."
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/pinned:
    get:
      operationId: CollectionDataController_retrievePinnedCollection
      summary: Get pinned collections
      parameters: []
      responses:
        "200":
          description: Pinned collections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PinnedCollectionDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/{collection}/pinned-drops:
    get:
      operationId: CollectionDataController_retrieveCollectionPinnedToDrops
      summary: Return pin status for collection within drops page
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Drops page pinned status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionPinnedStatusDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/{collection}/pinned:
    get:
      operationId: CollectionDataController_retrieveCollectionPinned
      summary: Return pin status for collection within home page
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Home page pinned status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionPinnedStatusDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/{collection}/follow:
    post:
      operationId: CollectionDataController_followCollection
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Collection
  /collection/query:
    get:
      operationId: CollectionDataController_retrieveCollections
      parameters:
        - name: filter
          required: false
          in: query
          description: 'A JSON string representing the filter criteria. For example:
            {"key": "value"}'
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/drops/query:
    get:
      operationId: CollectionDataController_retrieveCollectionDrops
      summary: Get drops query
      parameters:
        - name: filter
          required: false
          in: query
          description: 'A JSON string representing the filter criteria. For example:
            {"key": "value"}'
          schema:
            type: string
      responses:
        "200":
          description: Drops query response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DropsQueryDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/{collection}/drop-info:
    get:
      operationId: CollectionDataController_retrieveCollectionMintInfo
      summary: Get drop info
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Drop info response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DropInfoDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/{creatorTag}/{collectionTag}/drop-info:
    get:
      operationId: CollectionDataController_retrieveCollectionMintInfoByTags
      summary: Get drop info
      parameters:
        - name: creatorTag
          required: true
          in: path
          schema:
            type: string
        - name: collectionTag
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Drop info response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DropInfoDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/{collection}/upload-picture:
    put:
      operationId: CollectionDataController_setCollectionProfilePicture
      summary: Update collection profile
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        "200":
          description: Updated collection profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Collection
  /collection/{collection}/upload-banner:
    put:
      operationId: CollectionDataController_setCollectionBanner
      summary: Update collection profile
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        "200":
          description: Updated collection profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Collection
  /collection/{collection}/reset-picture:
    put:
      operationId: CollectionDataController_resetCollectionProfilePicture
      summary: Update collection profile
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Updated collection profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Collection
  /collection/{collection}/reset-banner:
    put:
      operationId: CollectionDataController_resetCollectionBanner
      summary: Update collection profile
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Updated collection profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionProfileDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Collection
  /collection/{collection}/holders:
    get:
      operationId: CollectionDataController_retrieveCollectionHolders
      summary: Get collection holders by collection ID
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
        - name: exportHolders
          required: true
          in: query
          schema:
            type: boolean
      responses:
        "200":
          description: Details of collection holders
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionHoldersDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/{collection}/owner:
    get:
      operationId: CollectionDataController_retrieveCollectionOwner
      summary: Get collection owner by collection ID
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: The owner of the collection
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionOwnerDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/{collection}/stats:
    get:
      operationId: CollectionDataController_retrieveCollectionStatisticsByCollection
      summary: Get collection stats
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: The collection stats
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionStatsDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/stats/query:
    get:
      operationId: CollectionDataController_retrieveCollectionStatistics
      summary: Get explore collections statistics
      parameters:
        - name: filter
          required: true
          in: query
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionStatsFilter"
          description: 'A JSON object representing the filter criteria. Example:
            {"includeCount":true,"top":25,"skip":0,"strictSelect":false}'
          schema:
            type: string
      responses:
        "200":
          description: Explore collections statistics response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExploreCollectionsStatisticsDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/global-offer/query:
    get:
      operationId: CollectionDataController_retrieveCollectionOffers
      summary: Get global offers
      parameters:
        - name: filter
          required: true
          in: query
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionOffersFilter"
          description: 'A JSON object representing the filter criteria. Example:
            {"includeCount":true,"top":25,"skip":0,"strictSelect":false}'
          schema:
            type: string
      responses:
        "200":
          description: Global offers response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalOffersDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /user/{scAddress}/creator/listing:
    get:
      operationId: CollectionDataController_retrieveCreatorListing
      parameters:
        - name: scAddress
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/{address}/creator/details:
    get:
      operationId: CollectionDataController_retrieveCreatorDetails
      summary: Get creator details information
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Creator details fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatorDetailsDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /pool/{poolId}/profile:
    get:
      operationId: StakingDataController_retrievePoolDetails
      summary: Get collection staking pool summary
      parameters:
        - name: poolId
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: Staking pool summary response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StakingSummary"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Staking
    patch:
      operationId: StakingDataController_editStakingPoolProfile
      summary: Update collection staking pool summary
      parameters:
        - name: poolId
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StakingPostDTO"
      responses:
        "200":
          description: Update staking pool summary response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StakingSummary"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Staking
  /pool/{poolId}/whitelist:
    get:
      operationId: StakingDataController_retrievePoolWhitelist
      parameters:
        - name: poolId
          required: true
          in: path
          schema:
            type: number
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Staking
  /pool/{poolId}/upload-picture:
    put:
      operationId: StakingDataController_setCollectionProfilePicture
      summary: Update collection staking pool summary
      parameters:
        - name: poolId
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        "200":
          description: Update staking pool summary response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StakingSummary"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Staking
  /user/{address}/staking/available-pools:
    get:
      operationId: StakingDataController_retrieveUserAvailablePools
      summary: Get collection staking pool summary
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Staking pool summary response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StakingSummary"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/{address}/staking/owned-collections:
    get:
      operationId: StakingDataController_retrieveUserOwnedCollections
      summary: Get owned collections by user ID
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Details of owned collections
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OwnedCollectionsDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/{address}/staking/owned-pools:
    get:
      operationId: StakingDataController_retrieveUserOwnedPools
      summary: Get owned collections staking pools summary
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Staking owned staking pools summary response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StakingSummary"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/{address}/staking/summary:
    get:
      operationId: StakingDataController_retrieveUserStakingSummary
      summary: Get user staking summary by user ID
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: User staking summary
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserStakingSummaryDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/{address}/staking/creator:
    get:
      operationId: StakingDataController_retrieveUserStakingCreator
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/{address}/staking/collection/{collection}:
    get:
      operationId: StakingDataController_retrieveUserCollectionStaking
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/{address}/staking/pool/{poolId}/nfts:
    get:
      operationId: StakingDataController_retrieveUserPoolStaking
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
        - name: poolId
          required: true
          in: path
          schema:
            type: number
        - name: status
          required: false
          in: query
          description: "The status of the NFTs to retrieve. Options are: staked, unStaked,
            available. Default is staked."
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /collection/{collection}/staking/summary:
    get:
      operationId: StakingDataController_retrieveCollectionPoolStaking
      summary: Get collection staking summary
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Staking summary response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StakingSummary"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /collection/staking/explore:
    get:
      operationId: StakingDataController_exploreCollectionPoolStaking
      summary: Get explore staking pools
      parameters: []
      responses:
        "200":
          description: List of staking pools and their details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StakingExploreDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /user/{creatorTag}/owned-services:
    get:
      operationId: StakingDataController_retrieveCreatorOwnedServicesByTag
      parameters:
        - name: creatorTag
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /activity/query:
    get:
      operationId: NftActivityDataController_retrieveNftActivity
      summary: Query activity history
      parameters:
        - name: filter
          required: true
          in: query
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NftActivityFilter"
          description: 'A JSON object representing the filter criteria. Example:
            {"includeCount":true,"top":25,"skip":0,"strictSelect":false}'
          schema:
            type: string
      responses:
        "200":
          description: Activity history response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActivityHistoryDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - NftActivity
  /analytics/volume:
    get:
      operationId: NftActivityDataController_retrieveVolumeGraphData
      summary: Get analytics volume
      parameters:
        - name: startTime
          required: false
          in: query
          description: Start date as 'yyyy-MM-dd'
          schema:
            type: string
        - name: endTime
          required: false
          in: query
          description: End date as yyyy-MM-dd
          schema:
            type: string
        - name: bin
          required: false
          in: query
          description: Bin size in days, as a number followed by a letter (e.g. 1d)
          schema:
            type: string
      responses:
        "200":
          description: Analytics volume response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnalyticsVolumeResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - NftActivity
  /collection/{collection}/analytics/volume:
    get:
      operationId: NftActivityDataController_retrieveCollectionVolumeGraphData
      summary: Get analytics volume
      parameters:
        - name: collection
          required: true
          in: path
          schema:
            type: string
        - name: startTime
          required: false
          in: query
          description: Start date as 'yyyy-MM-dd'
          schema:
            type: string
        - name: endTime
          required: false
          in: query
          description: End date as yyyy-MM-dd
          schema:
            type: string
        - name: bin
          required: false
          in: query
          description: Bin size in days, as a number followed by a letter (e.g. 1d)
          schema:
            type: string
      responses:
        "200":
          description: Collection analytics volume response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AnalyticsVolumeDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Collection
  /user/{address}/analytics/volume:
    get:
      operationId: NftActivityDataController_retrieveUserTradingSummary
      summary: Fetch user analytics
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: User analytics fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAnalyticsDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /analytics/overview:
    get:
      operationId: NftActivityDataController_retrieveOverallStatistics
      summary: Get global analytics overview
      parameters: []
      responses:
        "200":
          description: Global analytics overview response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalAnalyticsOverviewResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - NftActivity
  /user/stats:
    get:
      operationId: NftActivityDataController_retrieveUserStatistics
      summary: Get users stats
      parameters:
        - name: orderBy
          required: false
          in: query
          description: "The field to order by. Possible values: totalVolume"
          schema:
            type: string
        - name: orderDirection
          required: false
          in: query
          description: "The order direction. Possible values: asc | desc"
          schema:
            type: string
        - name: skip
          required: false
          in: query
          description: The number of records to skip
          schema:
            type: number
        - name: top
          required: false
          in: query
          description: The number of records to return
          schema:
            type: number
      responses:
        "200":
          description: List of user stats
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetUsersStatsResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/xoxno-drop:
    get:
      operationId: NftActivityDataController_retrieveUserXoxnoDropScore
      parameters:
        - name: skip
          required: false
          in: query
          description: The number of records to skip
          schema:
            type: number
        - name: top
          required: false
          in: query
          description: The number of records to return
          schema:
            type: number
        - name: address
          required: false
          in: query
          description: The user address to filter by
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
  /user/me/xoxno-drop:
    get:
      operationId: NftActivityDataController_retrieveMyXoxnoDropScore
      parameters: []
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - User
  /transactions/{txHash}/status:
    get:
      operationId: TransactionController_getTransactionStatus
      summary: Check the final transaction status
      parameters:
        - name: txHash
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: Transaction status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionProcessStatus"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Transactions
  /transactions:
    post:
      operationId: TransactionController_createTransaction
      summary: Send a transaction to the blockchain
      parameters:
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransactionCreate"
      responses:
        "201":
          description: Transaction details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransactionSendResult"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Transactions
  /transactions/batch:
    post:
      operationId: TransactionController_createTransactionBatch
      summary: Send a transaction to the blockchain
      parameters:
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/TransactionCreate"
      responses:
        "201":
          description: Transaction details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BatchTransactionResponse"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Transactions
  /search:
    get:
      operationId: SearchDataController_globalSearch
      summary: Global Search
      parameters:
        - name: filter
          required: false
          in: query
          description: 'A JSON string representing the filter criteria. For example:
            {"key": "value"}'
          schema:
            type: string
      responses:
        "200":
          description: Global search response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalSearchResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Search
  /user/search:
    get:
      operationId: SearchDataController_userSearch
      summary: Global User Search
      parameters:
        - name: filter
          required: false
          in: query
          description: 'A JSON string representing the filter criteria. For example:
            {"key": "value"}'
          schema:
            type: string
      responses:
        "200":
          description: Global user search response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalSearchResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Search
  /collection/search:
    get:
      operationId: SearchDataController_collectionSearch
      summary: Global collection Search
      parameters:
        - name: filter
          required: false
          in: query
          description: 'A JSON string representing the filter criteria. For example:
            {"key": "value"}'
          schema:
            type: string
      responses:
        "200":
          description: Global collection search response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalSearchResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Search
  /collection/drops/search:
    get:
      operationId: SearchDataController_collectionDropsSearch
      summary: Global collection drops Search
      parameters:
        - name: filter
          required: false
          in: query
          description: 'A JSON string representing the filter criteria. For example:
            {"key": "value"}'
          schema:
            type: string
      responses:
        "200":
          description: Global collection drops search response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalSearchResponseDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Search
  /nft/search/query:
    get:
      operationId: SearchDataController_nftSearch
      summary: Global nft search
      parameters:
        - name: filter
          required: true
          in: query
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NftDocFilter"
          description: 'A JSON object representing the filter criteria. Example:
            {"includeCount":true,"top":25,"skip":0,"strictSelect":false}'
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Search
  /user/chat/message:
    post:
      operationId: ChatDataController_sendChatMessage
      summary: Send a private message
      parameters:
        - schema: {}
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SendChatMessageDto"
      responses:
        "201":
          description: Message sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatMessageDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Chat
      security:
        - bearer: []
  /user/chat/conversation:
    get:
      operationId: ChatDataController_getChatConversation
      summary: Fetch user chat conversations summary
      parameters:
        - name: skip
          required: false
          in: query
          description: Number of items to skip
          schema:
            type: number
        - name: top
          required: false
          in: query
          description: Number of items to retrieve
          schema:
            type: number
        - name: isGroupChat
          required: false
          in: query
          description: If undefined, will return all conversations. If true, will return
            group chats. If false, will return direct messages.
          schema:
            type: boolean
      responses:
        "200":
          description: User chat conversations summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FetchChatConversationsSummaryDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Chat
      security:
        - bearer: []
  /user/chat/conversation/{conversationId}:
    get:
      operationId: ChatDataController_getConversationMessageById
      summary: Fetch user chat conversation messages
      parameters:
        - name: conversationId
          required: true
          in: path
          schema:
            type: string
        - name: skip
          required: false
          in: query
          description: Number of items to skip
          schema:
            type: number
        - name: top
          required: false
          in: query
          description: Number of items to retrieve
          schema:
            type: number
        - name: receiver
          required: true
          in: query
          schema:
            type: string
      responses:
        "200":
          description: User chat conversation messages retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FetchChatMessagesDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Chat
      security:
        - bearer: []
    delete:
      operationId: ChatDataController_deleteConversation
      summary: Delete a user conversation
      parameters:
        - name: conversationId
          required: true
          in: path
          schema:
            type: string
      responses:
        "200":
          description: User conversation deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Chat
      security:
        - bearer: []
  /user/chat/conversation-summary:
    get:
      operationId: ChatDataController_getUserConversationSummary
      summary: Fetch global conversation summary
      parameters: []
      responses:
        "200":
          description: Global conversation summary fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GlobalConversationSummaryDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Chat
      security:
        - bearer: []
  /user/chat/conversation/{conversationId}/message/{messageId}:
    delete:
      operationId: ChatDataController_deleteUserConversationMessage
      summary: Delete a user conversation
      parameters:
        - name: conversationId
          required: true
          in: path
          schema:
            type: string
        - name: messageId
          required: true
          in: path
          schema:
            type: string
        - name: deleteForAll
          required: false
          in: query
          description: Delete message for all users
          schema:
            type: boolean
      responses:
        "200":
          description: User conversation deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Chat
      security:
        - bearer: []
  /user/chat/block:
    get:
      operationId: ChatDataController_getBlockedUsers
      summary: Fetch blocked chats
      parameters:
        - name: skip
          required: true
          in: query
          schema:
            type: number
        - name: top
          required: true
          in: query
          schema:
            type: number
      responses:
        "200":
          description: Blocked chats fetched successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FetchBlockedChatsDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Chat
      security:
        - bearer: []
  /user/chat/block/{address}:
    post:
      operationId: ChatDataController_blockUser
      summary: Block a user
      parameters:
        - name: address
          required: true
          in: path
          schema:
            type: string
      responses:
        "201":
          description: User blocked successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - Chat
      security:
        - bearer: []
  /user/chat/token:
    post:
      operationId: AzureWsController_generateChatAccessToken
      summary: Get WebSocket connection token
      parameters: []
      responses:
        "201":
          description: WebSocket connection token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WebSocketTokenDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      security:
        - bearer: []
      tags:
        - Chat
  /user/notifications:
    get:
      operationId: NotificationDataController_getNotifications
      parameters:
        - name: skip
          required: false
          in: query
          description: Number of items to skip
          schema:
            type: number
        - name: top
          required: false
          in: query
          description: Number of items to retrieve
          schema:
            type: number
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/notifications/unread-count:
    get:
      operationId: NotificationDataController_getNotificationCount
      parameters: []
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/notifications/clear:
    delete:
      operationId: NotificationDataController_clearAllNotifications
      summary: Delete a user conversation
      parameters: []
      responses:
        "200":
          description: User conversation deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessDto"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
  /user/notifications/read:
    patch:
      operationId: NotificationDataController_setNotificationAsRead
      parameters:
        - name: id
          required: false
          in: query
          description: Notification id
          schema:
            type: string
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "403":
          description: Forbidden resource
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseDto"
      tags:
        - User
      security:
        - bearer: []
info:
  title: XOXNO APIs
  description: APIs for XOXNO marketplace
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    ErrorResponseDto:
      type: object
      properties:
        statusCode:
          type: number
          example: 400
        message:
          type: string
          example: Error message explaining what happened
        timestamp:
          type: string
          example: 2024-07-10T13:36:22.603Z
        path:
          type: string
          example: /user/abd/network-account
      required:
        - statusCode
        - message
        - timestamp
        - path
    LoginRequest:
      type: object
      properties:
        address:
          type: string
          description: The address of the user
        loginToken:
          type: string
          description: The login token
        signature:
          type: string
          description: The signature of the login token
        data:
          type: object
          description: Additional data as key-value pairs
      required:
        - address
        - loginToken
        - signature
        - data
    LoginAccessDto:
      type: object
      properties:
        access_token:
          type: string
          description: Access token for authentication
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        expires:
          type: number
          description: Expiration time of the token in seconds
          example: 3600
      required:
        - access_token
        - expires
    ActiveGuardianDto:
      type: object
      properties:
        activationEpoch:
          type: number
          example: 1099
        address:
          type: string
          example: erd1vhe5a5wyf62ylu4cvwjm0rg3ukwp8tusj0t2vxme5c3aav9jd9ws2c43dq
        serviceUID:
          type: string
          example: INVISIBLE_GUARDIAN
      required:
        - activationEpoch
        - address
        - serviceUID
    UserNetworkInfoDto:
      type: object
      properties:
        address:
          type: string
          example: erd1fmd662htrgt07xxd8me09newa9s0euzvpz3wp0c4pz78f83grt9qm6pn57
        nonce:
          type: number
          example: 3339
        balanceShort:
          type: number
          example: 0.5
        username:
          type: string
          example: "@mihaieremia"
        isUpgradeable:
          type: boolean
          example: false
        isReadable:
          type: boolean
          example: false
        isGuarded:
          type: boolean
          example: true
        isPayable:
          type: boolean
          example: false
        isPayableBySmartContract:
          type: boolean
          example: false
        balance:
          type: string
          example: "499779492251062403"
        shard:
          type: number
          example: 2
        guarded:
          type: boolean
          example: true
        activeGuardian:
          $ref: "#/components/schemas/ActiveGuardianDto"
        usdValue:
          type: number
          example: 18.254
      required:
        - address
        - nonce
        - balanceShort
        - username
        - isUpgradeable
        - isReadable
        - isGuarded
        - isPayable
        - isPayableBySmartContract
        - balance
        - shard
        - guarded
        - activeGuardian
        - usdValue
    WalletDto:
      type: object
      properties:
        usdValue:
          type: number
          example: 7514.91
        egldValue:
          type: number
          example: 205.899
        weight:
          type: number
          example: 100
      required:
        - usdValue
        - egldValue
        - weight
    EsdtsDto:
      type: object
      properties:
        usdValue:
          type: number
          example: 7496.669
        egldValue:
          type: number
          example: 205.399
        weight:
          type: number
          example: 99.74
      required:
        - usdValue
        - egldValue
        - weight
    StablesDto:
      type: object
      properties:
        usdValue:
          type: number
          example: 0
        egldValue:
          type: number
          example: 0
        weight:
          type: number
          example: 0
      required:
        - usdValue
        - egldValue
        - weight
    TokenAssetsDto:
      type: object
      properties:
        pngUrl:
          type: string
          example: https://media.xoxno.com/tokens/TIME-84518f/logo.png
        svgUrl:
          type: string
          example: https://media.xoxno.com/tokens/TIME-84518f/logo.svg
      required:
        - pngUrl
        - svgUrl
    TokenDto:
      type: object
      properties:
        id:
          type: string
          description: ID of the token
          example: EGLD
        identifier:
          type: string
          description: Identifier of the token
          example: EGLD
        collection:
          type: string
          description: Collection of the token
          example: FungibleTokenInfo
        dataType:
          type: string
          description: Data type of the token
          example: fungibleTokenProfile
        decimals:
          type: number
          description: Decimals of the token
          example: 18
        name:
          type: string
          description: Name of the token
          example: EGLD
        type:
          type: string
          description: Type of the token
          example: FungibleESDT
        category:
          description: Categories of the token
          example:
            - all
            - trade
            - staking
            - minting
            - p2p
          type: array
          items:
            type: string
        svgUrl:
          type: string
          description: SVG URL of the token logo
          example: https://media.xoxno.com/tokens/EGLD/logo.svg
        pngUrl:
          type: string
          description: PNG URL of the token logo
          example: https://media.xoxno.com/tokens/EGLD/logo.png
        ticker:
          type: string
          description: Ticker of the token
          example: EGLD
        _ts:
          type: number
          description: Timestamp
          example: 1705933418
        usdPrice:
          type: number
          description: USD price of the token
          example: 35.70543073773239
      required:
        - id
        - identifier
        - collection
        - dataType
        - decimals
        - name
        - type
        - category
        - svgUrl
        - pngUrl
        - ticker
        - _ts
        - usdPrice
    UserTokenInventoryResponseDto:
      type: object
      properties:
        wallet:
          $ref: "#/components/schemas/WalletDto"
        esdts:
          $ref: "#/components/schemas/EsdtsDto"
        stables:
          $ref: "#/components/schemas/StablesDto"
        tokens:
          type: array
          items:
            $ref: "#/components/schemas/TokenDto"
      required:
        - wallet
        - esdts
        - stables
        - tokens
    SocialsDto:
      type: object
      properties:
        twitter:
          type: string
          example: https://twitter.com/MiceCityClub
        instagram:
          type: string
          example: https://instagram.com/mice.city?igshid=YmMyMTA2M2Y=
        website:
          type: string
          example: https://micecity.club
        telegram:
          type: string
          example: https://t.me/micecityclub
        discord:
          type: string
          example: https://discord.com/invite/PGJfJGN9Mz
        facebook:
          type: string
          example: ""
        youtube:
          type: string
          example: ""
      required:
        - twitter
        - instagram
        - website
        - telegram
        - discord
        - facebook
        - youtube
    UserDepositDto:
      type: object
      properties:
        balance:
          type: string
          example: "1000000000000000000"
        balanceShort:
          type: number
          example: 1
        paymentToken:
          type: string
          example: EGLD
        paymentTokenNonce:
          type: number
          example: 0
      required:
        - balance
        - balanceShort
        - paymentToken
        - paymentTokenNonce
    EmailNotificationsDto:
      type: object
      properties:
        enabled:
          type: boolean
          example: true
        emailAddress:
          type: string
          example: me@dani.ro
        isEmailVerificationPending:
          type: boolean
          example: false
        isEmailVerified:
          type: boolean
          example: true
        isWeb2User:
          type: boolean
          example: false
        timestamp:
          type: number
          example: 1720462258
      required:
        - enabled
        - emailAddress
        - isEmailVerificationPending
        - isEmailVerified
        - isWeb2User
        - timestamp
    NotificationPreferencesDto:
      type: object
      properties: {}
    UserSettingsDto:
      type: object
      properties:
        dataType:
          type: string
          example: userSettings
        emailNotifications:
          $ref: "#/components/schemas/EmailNotificationsDto"
        notificationPreferences:
          $ref: "#/components/schemas/NotificationPreferencesDto"
        address:
          type: string
          example: erd1fmd662htrgt07xxd8me09newa9s0euzvpz3wp0c4pz78f83grt9qm6pn57
        id:
          type: string
          example: erd1fmd662htrgt07xxd8me09newa9s0euzvpz3wp0c4pz78f83grt9qm6pn57-userSettings
        _ts:
          type: number
          example: 1720462258
      required:
        - dataType
        - emailNotifications
        - notificationPreferences
        - address
        - id
        - _ts
    UserProfileDto:
      type: object
      properties:
        dataType:
          type: string
          example: userProfile
        address:
          type: string
          example: erd1fmd662htrgt07xxd8me09newa9s0euzvpz3wp0c4pz78f83grt9qm6pn57
        isBanned:
          type: boolean
          example: false
        isVerified:
          type: boolean
          example: false
        socials:
          $ref: "#/components/schemas/SocialsDto"
        joinedDate:
          type: number
          example: 1643381871
        id:
          type: string
          example: erd1fmd662htrgt07xxd8me09newa9s0euzvpz3wp0c4pz78f83grt9qm6pn57-userProfile
        profile:
          type: string
          example: https://media.xoxno.com/collectionprofile/erd1fmd662htrgt07xxd8me09newa9s0euzvpz3wp0c4pz78f83grt9qm6pn57/profilePicture.webp?ts=1718876966
        banner:
          type: string
          example: https://media.xoxno.com/userprofile/erd1fmd662htrgt07xxd8me09newa9s0euzvpz3wp0c4pz78f83grt9qm6pn57/profileBanner.webp?ts=1718876966
        description:
          type: string
          example: Testing XOXNO V3.2
        herotag:
          type: string
          example: "@mihaieremia"
        isCreator:
          type: boolean
          example: false
        isPoolOwner:
          type: boolean
          example: true
        userDeposit:
          type: array
          items:
            $ref: "#/components/schemas/UserDepositDto"
        followCount:
          type: number
          example: 0
        _ts:
          type: number
          example: 1720724856
        userSettings:
          $ref: "#/components/schemas/UserSettingsDto"
      required:
        - dataType
        - address
        - isBanned
        - isVerified
        - socials
        - joinedDate
        - id
        - profile
        - banner
        - description
        - herotag
        - isCreator
        - isPoolOwner
        - userDeposit
        - followCount
        - _ts
        - userSettings
    SetEmailDto:
      type: object
      properties: {}
    VerifyEmailDto:
      type: object
      properties: {}
    UserUpdateDTO:
      type: object
      properties:
        socials:
          $ref: "#/components/schemas/SocialsDto"
        description:
          type: string
          example: Testing XOXNO V3.2
      required:
        - socials
        - description
    SuccessDto:
      type: object
      properties:
        success:
          type: boolean
          example: true
      required:
        - success
    CreatorProfileDto:
      type: object
      properties:
        name:
          type: string
          example: Bananas
        contractAddress:
          type: string
          example: erd1qqqqqqqqqqqqqpgqutf9carlkckyn36t5uvp23m9fs877kfsys5s8axpe8
        address:
          type: string
          example: erd1vn9s8uj4e7r6skmqfw5py3hxnluw3ftv6dh47yt449vtvdnn9w2stmwm7l
        profile:
          type: string
          example: https://media.xoxno.com/collectionprofile/erd1vn9s8uj4e7r6skmqfw5py3hxnluw3ftv6dh47yt449vtvdnn9w2stmwm7l/creatorProfilePicture.webp?ts=1717019144
        banner:
          type: string
          example: https://media.xoxno.com/userprofile/erd1vn9s8uj4e7r6skmqfw5py3hxnluw3ftv6dh47yt449vtvdnn9w2stmwm7l/profileBanner.webp?ts=1717019141
        joinedDate:
          type: number
          example: 1641773364
        socials:
          $ref: "#/components/schemas/SocialsDto"
        description:
          type: string
          example: Best creator
        creatorTag:
          type: string
          example: Bananas
        followCount:
          type: number
          example: 0
      required:
        - name
        - contractAddress
        - address
        - profile
        - banner
        - joinedDate
        - socials
        - description
        - creatorTag
        - followCount
    CheckLikeStatusResponseDto:
      type: object
      properties:
        isFavorite:
          type: boolean
          example: false
      required:
        - isFavorite
    RateInfoDTO:
      type: object
      properties:
        rateShort:
          type: number
          description: Short rate
          example: 1.002
        reverseRateShort:
          type: number
          description: Reverse short rate
          example: 0.998
      required:
        - rateShort
        - reverseRateShort
    XoxnoLiquidStatsDto:
      type: object
      properties:
        participants:
          type: number
          description: Number of protocol participants
          example: 270
        totalRewards:
          type: number
          description: Total rewards awarded
          example: 768.42
        totalRewardsEgldValue:
          type: number
          description: Total rewards awarded as EGLD
          example: 4.85
        totalStaked:
          type: number
          description: Total staked amount
          example: 785386.47
        yearlyAPR:
          type: number
          description: Yearly APR
          example: 13.07
        totalRewardsUsdValue:
          type: number
          description: Total rewards as USD value
          example: 171.65
        totalStakedUsdValue:
          type: number
          description: Total staked amount as USD value
          example: 140274.99
        rateInfo:
          description: Exchange rate information
          allOf:
            - $ref: "#/components/schemas/RateInfoDTO"
        serviceFee:
          type: number
          description: Service fee
          example: 0
        instantUnstake:
          type: number
          description: Amount available for instant unstake
          example: 0
      required:
        - participants
        - totalRewards
        - totalRewardsEgldValue
        - totalStaked
        - yearlyAPR
        - totalRewardsUsdValue
        - totalStakedUsdValue
        - rateInfo
        - serviceFee
        - instantUnstake
    SwapDto:
      type: object
      properties:
        poolId:
          type: string
          example: erd1qqqqqqqqqqqqqpgqqz6vp9y50ep867vnr296mqf3dduh6guvmvlsu3sujc
        assetInIndex:
          type: number
          example: 0
        assetOutIndex:
          type: number
          example: 1
        amount:
          type: string
          example: "4182199770163362929142"
        returnAmount:
          type: string
          example: "1776845552107565998"
        assetIn:
          type: string
          example: PADAWAN-a17f58
        assetOut:
          type: string
          example: WEGLD-bd4d79
        functionName:
          type: string
          example: swapMultiTokensFixedInput
        arguments:
          example:
            - AQ==
            - ""
            - UEFEQVdBTi1hMTdmNTg=
            - V0VHTEQtYmQ0ZDc5
          type: array
          items:
            type: string
      required:
        - poolId
        - assetInIndex
        - assetOutIndex
        - amount
        - returnAmount
        - assetIn
        - assetOut
        - functionName
        - arguments
    PoolDto:
      type: object
      properties:
        allTokens:
          type: array
          items:
            $ref: "#/components/schemas/TokenDto"
        type:
          type: string
          example: onedex
      required:
        - allTokens
        - type
    HopDto:
      type: object
      properties:
        poolId:
          type: string
          example: erd1qqqqqqqqqqqqqpgqqz6vp9y50ep867vnr296mqf3dduh6guvmvlsu3sujc
        pool:
          $ref: "#/components/schemas/PoolDto"
        tokenIn:
          type: string
          example: PADAWAN-a17f58
        tokenInAmount:
          type: string
          example: "4182.199770163362929142"
        tokenOut:
          type: string
          example: WEGLD-bd4d79
        tokenOutAmount:
          type: string
          example: "1.776845552107565998"
      required:
        - poolId
        - pool
        - tokenIn
        - tokenInAmount
        - tokenOut
        - tokenOutAmount
    RouteDto:
      type: object
      properties:
        hops:
          type: array
          items:
            $ref: "#/components/schemas/HopDto"
        tokenIn:
          type: string
          example: PADAWAN-a17f58
        tokenInAmount:
          type: string
          example: "4182.199770163362929142"
        tokenOut:
          type: string
          example: WEGLD-bd4d79
        tokenOutAmount:
          type: string
          example: "1.776845552107565998"
      required:
        - hops
        - tokenIn
        - tokenInAmount
        - tokenOut
        - tokenOutAmount
    OriginalDto:
      type: object
      properties:
        tokenAddresses:
          type: array
          items:
            type: string
        swaps:
          type: array
          items:
            $ref: "#/components/schemas/SwapDto"
        swapAmount:
          type: string
          example: "7551.21881510239555991"
        returnAmount:
          type: string
          example: "3.208300850633318163"
        swapAmountWithDecimal:
          type: string
          example: "7551218815102395559910"
        returnAmountWithDecimal:
          type: string
          example: "3208300850633318163"
        tokenIn:
          type: string
          example: PADAWAN-a17f58
        tokenOut:
          type: string
          example: WEGLD-bd4d79
        marketSp:
          type: string
          example: "2348.014436081921556678"
        routes:
          type: array
          items:
            $ref: "#/components/schemas/RouteDto"
        effectivePrice:
          type: number
          example: 2353.650473150542
        effectivePriceReserved:
          type: number
          example: 0.00042487192189646716
        priceImpact:
          type: number
          example: 0.002394593901224484
        warning:
          type: string
          example: None
        minReturnAmount:
          type: string
          example: "3.192259346380151572"
        minReturnAmountWithDecimal:
          type: string
          example: "3192259346380151572"
        __from:
          type: string
          example: PADAWAN-a17f58
        __to:
          type: string
          example: WEGLD-bd4d79
        __amount:
          type: string
          example: "7551218815102395559910.6223"
      required:
        - tokenAddresses
        - swaps
        - swapAmount
        - returnAmount
        - swapAmountWithDecimal
        - returnAmountWithDecimal
        - tokenIn
        - tokenOut
        - marketSp
        - routes
        - effectivePrice
        - effectivePriceReserved
        - priceImpact
        - warning
        - minReturnAmount
        - minReturnAmountWithDecimal
        - __from
        - __to
        - __amount
    FetchSwapRoutesResponseDto:
      type: object
      properties:
        argument:
          type: string
          example: 0000000e5041444157414e2d6131376635380000000c5745474c442d62643464373900000009e2b7ae54b8339019f60000000000000000050000b4c094947e427d79931a8bad81316b797d238cdb3f00000019737761704d756c7469546f6b656e734669786564496e707574000000040000000101000000000000000e5041444157414e2d6131376635380000000c5745474c442d6264346437390000000e5041444157414e2d6131376635380000000c424f4245522d39656237363400000009b6a2880b8b4cd315f00000000000000000050000b4c094947e427d79931a8bad81316b797d238cdb3f00000019737761704d756c7469546f6b656e734669786564496e707574000000040000000101000000000000000e5041444157414e2d6131376635380000000c424f4245522d3965623736340000000c424f4245522d3965623736340000000c5745474c442d6264346437390000000000000000000000000500490c9a6ff1c993e899c9d9df08eecca3f748bd2954830000001473776170546f6b656e734669786564496e707574000000020000000c5745474c442d6264346437390000000101
        limits:
          type: string
          example: 0000000e5041444157414e2d613137663538000000000000000c424f4245522d396562373634000000000000000c5745474c442d626434643739000000082c4d2ef653e8db14
        extraGasLimit:
          type: number
          example: 75000000
        swapAmount:
          type: number
          example: 7551.218815102396
        paymentToken:
          type: string
          example: PADAWAN-a17f58
        bigUintAmount:
          type: string
          example: "7.55121881510239555991e+21"
        original:
          $ref: "#/components/schemas/OriginalDto"
      required:
        - argument
        - limits
        - extraGasLimit
        - swapAmount
        - paymentToken
        - bigUintAmount
        - original
    LikeNftDto:
      type: object
      properties:
        isFavorite:
          type: boolean
          description: Is favorite flag
          example: true
        collection:
          type: string
          description: Collection identifier
          example: EAPES-8f3c1f
        identifier:
          type: string
          description: NFT identifier
          example: EAPES-8f3c1f-1047
      required:
        - isFavorite
        - collection
        - identifier
    InventorySummaryDto:
      type: object
      properties:
        collection:
          type: string
          description: Collection identifier
        inventoryCount:
          type: number
          description: Number of NFTs in inventory
        listedCount:
          type: number
          description: Number of listed NFTs
        stakedCount:
          type: number
          description: Number of staked NFTs
        floorPrice:
          type: number
          description: Floor price of the collection
        name:
          type: string
          description: Name of the collection
        isVerified:
          type: boolean
          description: Verification status of the collection
        isVisible:
          type: boolean
          description: Visibility status of the collection
        profile:
          type: string
          description: Profile picture URL of the collection
        value:
          type: number
          description: Value of the collection
      required:
        - collection
        - inventoryCount
        - listedCount
        - stakedCount
        - floorPrice
        - name
        - isVerified
        - isVisible
        - profile
        - value
    OwnerDto:
      type: object
      properties:
        address:
          type: string
          example: erd1xkhvemdwfnn43rhx6vz7yy3pk6hg305qpgaefh9rtdk343dplsvqn7zsam
        profile:
          type: string
          example: https://media.xoxno.com/userprofile/erd1xkhvemdwfnn43rhx6vz7yy3pk6hg305qpgaefh9rtdk343dplsvqn7zsam/profilePicture.webp
        username:
          type: string
          example: "@sospvp"
      required:
        - address
        - profile
        - username
    NftInfoDto:
      type: object
      properties:
        identifier:
          type: string
          example: HLSR-374950-1934
        nonce:
          type: number
          example: 6452
        name:
          type: string
          example: 37.43 EGLD
        url:
          type: string
          example: https://arweave.net/mfjIHO6ckE8m1ck_b46BdV4ZFVGEEHJSno2MnFKuzgk/undelegate-nft.png
        wasProcessed:
          type: boolean
          example: true
        media:
          type: object
          example:
            avifUrl: https://media.xoxno.com/nftmedia/HLSR-374950/receipt.avif
            webpUrl: https://media.xoxno.com/nftmedia/HLSR-374950/receipt.webp
            originalMedia:
              contentLength: 2639394
              contentType: image/png
        onSale:
          type: boolean
          example: false
        saleInfo:
          type: object
          example: {}
        metadata:
          type: object
          example:
            rarity:
              rank: 202
        owner:
          example:
            address: erd1vdr8jnyhp0wlk3cwe2j5ejwkzwepexqgtnqxanravgv0d6vg59dqnfkjmm
            profile: https://media.xoxno.com/userprofile/erd1vdr8jnyhp0wlk3cwe2j5ejwkzwepexqgtnqxanravgv0d6vg59dqnfkjmm/profilePicture.webp
            username: "@xtrading"
          allOf:
            - $ref: "#/components/schemas/OwnerDto"
        currentOwner:
          example:
            address: erd1vdr8jnyhp0wlk3cwe2j5ejwkzwepexqgtnqxanravgv0d6vg59dqnfkjmm
            profile: https://media.xoxno.com/userprofile/erd1vdr8jnyhp0wlk3cwe2j5ejwkzwepexqgtnqxanravgv0d6vg59dqnfkjmm/profilePicture.webp
            username: "@xtrading"
          allOf:
            - $ref: "#/components/schemas/OwnerDto"
        receiverIsNotOwner:
          type: boolean
          example: true
      required:
        - identifier
        - nonce
        - name
        - url
        - wasProcessed
        - media
        - onSale
        - saleInfo
        - metadata
        - owner
        - currentOwner
        - receiverIsNotOwner
    OfferDto:
      type: object
      properties:
        isActive:
          type: boolean
          example: true
        identifier:
          type: string
          example: HLSR-374950-1934
        collection:
          type: string
          example: HLSR-374950
        offerId:
          type: number
          example: 336875
        paymentToken:
          type: string
          example: EGLD
        paymentTokenNonce:
          type: number
          example: 0
        price:
          type: string
          example: "36700000000000000000"
        priceShort:
          type: number
          example: 36.7
        deadline:
          type: number
          example: 1721220240
        timestamp:
          type: number
          example: 1720615494
        owner:
          $ref: "#/components/schemas/OwnerDto"
        quantity:
          type: number
          example: 1
        marketplace:
          type: string
          example: xoxno
        usdValue:
          type: number
          example: 1323.373
        floorPriceMargin:
          type: number
          example: -1.95
        floorPrice:
          type: number
          example: 1
        nftInfo:
          $ref: "#/components/schemas/NftInfoDto"
      required:
        - isActive
        - identifier
        - collection
        - offerId
        - paymentToken
        - paymentTokenNonce
        - price
        - priceShort
        - deadline
        - timestamp
        - owner
        - quantity
        - marketplace
        - usdValue
        - floorPriceMargin
        - floorPrice
        - nftInfo
    GetUserOffersResponseDto:
      type: object
      properties:
        count:
          type: number
          example: 11
        hasMoreResults:
          type: boolean
          example: false
        resources:
          type: array
          items:
            $ref: "#/components/schemas/OfferDto"
      required:
        - count
        - hasMoreResults
        - resources
    TraitDetailsDto:
      type: object
      properties:
        attributeOccurrence:
          type: number
          example: 63
        floorPrice:
          type: number
          example: 0.2
        onSaleCount:
          type: number
          example: 4
        usdValue:
          type: number
          example: 7.305
      required:
        - attributeOccurrence
    ExampleSectionDto:
      type: object
      properties:
        exampleTrait:
          $ref: "#/components/schemas/TraitDetailsDto"
        anotherTrait:
          $ref: "#/components/schemas/TraitDetailsDto"
      required:
        - exampleTrait
        - anotherTrait
    AttributesExamplesDto:
      type: object
      properties:
        Background:
          $ref: "#/components/schemas/ExampleSectionDto"
        Fur:
          $ref: "#/components/schemas/ExampleSectionDto"
        Eyes:
          $ref: "#/components/schemas/ExampleSectionDto"
        Mouth:
          $ref: "#/components/schemas/ExampleSectionDto"
        Clothes:
          $ref: "#/components/schemas/ExampleSectionDto"
        Hat:
          $ref: "#/components/schemas/ExampleSectionDto"
        Accessories:
          $ref: "#/components/schemas/ExampleSectionDto"
        Faction:
          $ref: "#/components/schemas/ExampleSectionDto"
        Special:
          $ref: "#/components/schemas/ExampleSectionDto"
      required:
        - Background
        - Fur
        - Eyes
        - Mouth
        - Clothes
        - Hat
        - Accessories
        - Faction
        - Special
    GetSingleNftOfferResponseDto:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: "#/components/schemas/OfferDto"
        hasMoreResults:
          type: boolean
          example: false
      required:
        - resources
        - hasMoreResults
    CollectionRanksDTO:
      type: object
      properties:
        identifier:
          type: string
          example: MICE-a0c447-0b99
        name:
          type: string
          example: "MiceCity #2969"
        rank:
          type: number
          example: 1
      required:
        - identifier
        - name
        - rank
    DensityDto:
      type: object
      properties:
        key:
          type: string
          example: "0.180"
        intervalName:
          type: string
          example: 0.180 - 0.180
        intervalCount:
          type: number
          example: 0
        totalCount:
          type: number
          example: 0
      required:
        - key
        - intervalName
        - intervalCount
        - totalCount
    RarityDto:
      type: object
      properties:
        rank:
          type: number
          example: 3769
      required:
        - rank
    MetadataDto:
      type: object
      properties:
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/NftMetadataAttributes"
    MediaDto:
      type: object
      properties:
        avifUrl:
          type: string
          example: https://media.xoxno.com/nftmedia/HLSR-374950/receipt.avif
        webpUrl:
          type: string
          example: https://media.xoxno.com/nftmedia/HLSR-374950/receipt.webp
        originalMedia:
          type: object
          example:
            contentLength: 2639394
            contentType: image/png
      required:
        - avifUrl
        - webpUrl
        - originalMedia
    SaleInfoDto:
      type: object
      properties:
        minBidShort:
          type: number
          example: 0.18
        marketplace:
          type: string
          example: xoxno
      required:
        - minBidShort
        - marketplace
    ListingDto:
      type: object
      properties:
        identifier:
          type: string
          example: MICE-a0c447-10fd
        name:
          type: string
          example: "MiceCity #4349"
        collection:
          type: string
          example: MICE-a0c447
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        url:
          type: string
          example: https://media.elrond.com/nfts/asset/QmWEwSi9AhgMPeu4CJfLpWq1yKSfmERZXt76b429pVSU9R/2287.png
        media:
          $ref: "#/components/schemas/MediaDto"
        wasProcessed:
          type: boolean
          example: true
        saleInfo:
          $ref: "#/components/schemas/SaleInfoDto"
      required:
        - identifier
        - name
        - collection
        - metadata
        - url
        - media
        - wasProcessed
        - saleInfo
    ListingsResponseDto:
      type: object
      properties:
        density:
          type: array
          items:
            $ref: "#/components/schemas/DensityDto"
        listings:
          type: array
          items:
            $ref: "#/components/schemas/ListingDto"
      required:
        - density
        - listings
    SignWithdrawDto:
      type: object
      properties: {}
    SignDataDto:
      type: object
      properties:
        data:
          type: string
          example: hex-encoded-data
        signature:
          type: string
          example: hex-encoded-signature
      required:
        - data
        - signature
    SignAcceptGlobalOfferDto:
      type: object
      properties: {}
    SignMintDto:
      type: object
      properties: {}
    OtherDataDto:
      type: object
      properties:
        nftCount:
          type: number
          example: 5579
        followCount:
          type: number
          example: 200
        holdersCount:
          type: number
          example: 764
      required:
        - nftCount
        - followCount
        - holdersCount
    StatisticsDto:
      type: object
      properties:
        other:
          $ref: "#/components/schemas/OtherDataDto"
      required:
        - other
    CollectionProfileDto:
      type: object
      properties:
        dataType:
          type: string
          example: collectionProfile
        collection:
          type: string
          example: MICE-a0c447
        name:
          type: string
          example: MiceCity
        description:
          type: string
          example: Welcome to the 1980s, set in an alternative Miami populated by mice!
            Our collection of 8000 uniquely generated retro mice is the ultimate
            blast from the past, bringing the decade of big hair, excess, pastel
            suits & neon lights to the MultiversX Blockchain!
        isVisible:
          type: boolean
          example: true
        isVerified:
          type: boolean
          example: true
        profile:
          type: string
          example: https://media.xoxno.com/collectionprofile/MICE-a0c447/profilePicture.webp?ts=1679309756
        banner:
          type: string
          example: https://media.xoxno.com/collectionprofile/MICE-a0c447/profilebanner.webp
        statistics:
          $ref: "#/components/schemas/StatisticsDto"
        owner:
          type: string
          example: erd10ugfytgdndw5qmnykemjfpd7xrjs63f0r2qjhug0ek9gnfdjxq4s8qjvcx
        creator:
          type: string
          example: erd1qqqqqqqqqqqqqpgq2t6ef4u9ts3j86504sx0zlvw0vujfq6yys5sqfg40f
        isMintable:
          type: boolean
          example: true
        hasStaking:
          type: boolean
          example: true
        id:
          type: string
          example: MICE-a0c447-collectionProfile
        socials:
          $ref: "#/components/schemas/SocialsDto"
        type:
          type: string
          example: NonFungibleESDT
        _ts:
          type: number
          example: 1720568178
      required:
        - dataType
        - collection
        - name
        - description
        - isVisible
        - isVerified
        - profile
        - banner
        - statistics
        - owner
        - creator
        - isMintable
        - hasStaking
        - id
        - socials
        - type
        - _ts
    FloorPriceDto:
      type: object
      properties:
        collection:
          type: string
          example: MICE-a0c447
        price:
          type: number
          example: 0.18
      required:
        - collection
        - price
    PinnedCollectionDto:
      type: object
      properties:
        collection:
          type: string
          example: EAPES-8f3c1f
        name:
          type: string
          example: EAPES
        isVerified:
          type: boolean
          example: true
        profile:
          type: string
          example: https://media.xoxno.com/collectionprofile/EAPES-8f3c1f/profilePicture.webp?ts=1691359925
        banner:
          type: string
          example: https://media.xoxno.com/collectionprofile/EAPES-8f3c1f/profilebanner.webp
        description:
          type: string
          example: EAPES is a collection of 10,000 unique 3D APEs living on the MultiversX
            blockchain
        creator:
          type: string
          example: erd1qqqqqqqqqqqqqpgq7gma4udjeh3mwuq4lmk7wccgh0tenxu6yv5qc2csfy
        isMintable:
          type: boolean
          example: false
      required:
        - collection
        - name
        - isVerified
        - profile
        - banner
        - description
        - creator
    CollectionPinnedStatusDto:
      type: object
      properties:
        collection:
          type: string
          description: Collection ticker
        status:
          type: boolean
          description: Pinned status
      required:
        - collection
        - status
    PriceDto:
      type: object
      properties:
        tokenIdentifier:
          type: string
          example: EGLD
        tokenNonce:
          type: string
          example: "0"
        amount:
          type: string
          example: "300000000000000000"
        amountShort:
          type: number
          example: 0.3
      required:
        - tokenIdentifier
        - tokenNonce
        - amount
        - amountShort
    CollectionInfoDto:
      type: object
      properties:
        name:
          type: string
          example: EBMC
        socials:
          $ref: "#/components/schemas/SocialsDto"
        isVerified:
          type: boolean
          example: false
        isVisible:
          type: boolean
          example: true
        description:
          type: string
          example: Test collection
        profile:
          type: string
          example: https://media.xoxno.com/collectionprofile/EBMC-8a2d40/profilePicture.webp
        banner:
          type: string
          example: https://media.xoxno.com/collectionprofile/EBMC-8a2d40/profilePicture.webp
        collectionSize:
          type: number
          example: 2955
        followCount:
          type: number
          example: 16
        holdersCount:
          type: number
          example: 0
        owner:
          type: string
          example: erd10ugfytgdndw5qmnykemjfpd7xrjs63f0r2qjhug0ek9gnfdjxq4s8qjvcx
        volume:
          type: number
          example: 1230.34
      required:
        - name
        - socials
        - isVerified
        - isVisible
        - description
        - profile
        - banner
        - collectionSize
        - followCount
        - holdersCount
        - owner
        - volume
    CreatorInfoDto:
      type: object
      properties:
        name:
          type: string
          example: Marcel81
        contractAddress:
          type: string
          example: erd1qqqqqqqqqqqqqpgqzty6ekd0dwte8r3d45kt78el9yle5vmkys5sr86uws
        profile:
          type: string
          example: https://media.xoxno.com/utils/defaultProfilePic.webp
      required:
        - name
        - contractAddress
        - profile
    DropResourceDto:
      type: object
      properties:
        prices:
          type: array
          items:
            $ref: "#/components/schemas/PriceDto"
        startTime:
          type: number
          example: 1720587300
        isSoldOut:
          type: boolean
          example: false
        collectionTag:
          type: string
          example: Nfthero
        collectionSize:
          type: number
          example: 4
        totalNftMinted:
          type: number
          example: 0
        collection:
          type: string
          example: 1000-76443d
        creatorTag:
          type: string
          example: Marcel81
        creatorName:
          type: string
          example: Marcel81
        endTime:
          type: number
          example: 1722401700
        collectionInfo:
          $ref: "#/components/schemas/CollectionInfoDto"
        creatorInfo:
          $ref: "#/components/schemas/CreatorInfoDto"
      required:
        - prices
        - startTime
        - isSoldOut
        - collectionTag
        - collectionSize
        - totalNftMinted
        - collection
        - creatorTag
        - creatorName
        - endTime
        - collectionInfo
        - creatorInfo
    DropsQueryDto:
      type: object
      properties:
        count:
          type: number
          example: null
        hasMoreResults:
          type: boolean
          example: true
        resources:
          type: array
          items:
            $ref: "#/components/schemas/DropResourceDto"
      required:
        - hasMoreResults
        - resources
    MintStageDto:
      type: object
      properties:
        dataType:
          type: string
          example: mintStage
        collection:
          type: string
          example: MICE-a0c447
        contractAddress:
          type: string
          example: erd1qqqqqqqqqqqqqpgq2t6ef4u9ts3j86504sx0zlvw0vujfq6yys5sqfg40f
        collectionTag:
          type: string
          example: MiceCity
        name:
          type: string
          example: MiceCity
        startTime:
          type: number
          example: 1645210800
        endTime:
          type: number
          example: 0
        mintCount:
          type: number
          example: 5583
        mintLimit:
          type: number
          example: 8000
        mintEnabled:
          type: boolean
          example: true
        isWhitelist:
          type: boolean
          example: false
        walletLimit:
          type: number
          example: 0
        prices:
          type: array
          items:
            $ref: "#/components/schemas/PriceDto"
        id:
          type: string
          example: MICE-a0c447-MiceCity-mintStage
        _ts:
          type: number
          example: 1720568180
        walletLimitReached:
          type: boolean
          example: false
        maxBuyable:
          type: number
          example: null
          nullable: true
      required:
        - dataType
        - collection
        - contractAddress
        - collectionTag
        - name
        - startTime
        - endTime
        - mintCount
        - mintLimit
        - mintEnabled
        - isWhitelist
        - walletLimit
        - prices
        - id
        - _ts
        - walletLimitReached
        - maxBuyable
    DropInfoDto:
      type: object
      properties:
        collection:
          type: string
          example: MICE-a0c447
        contractAddress:
          type: string
          example: erd1qqqqqqqqqqqqqpgq2t6ef4u9ts3j86504sx0zlvw0vujfq6yys5sqfg40f
        collectionTag:
          type: string
          example: MiceCity
        nftTransferLimited:
          type: boolean
          example: false
        hasBotProtection:
          type: boolean
          example: false
        kycRequired:
          type: boolean
          example: false
        totalNftMinted:
          type: number
          example: 5583
        collectionSize:
          type: number
          example: 8000
        cid:
          type: string
          example: QmWEwSi9AhgMPeu4CJfLpWq1yKSfmERZXt76b429pVSU9R
        mediaType:
          type: string
          example: .png
        userMintsGlobal:
          type: number
          example: 0
        globalWalletLimit:
          type: number
          example: 0
        mintStages:
          type: array
          items:
            $ref: "#/components/schemas/MintStageDto"
        collectionInfo:
          $ref: "#/components/schemas/CollectionInfoDto"
        creatorInfo:
          $ref: "#/components/schemas/CreatorInfoDto"
      required:
        - collection
        - contractAddress
        - collectionTag
        - nftTransferLimited
        - hasBotProtection
        - kycRequired
        - totalNftMinted
        - collectionSize
        - cid
        - mediaType
        - userMintsGlobal
        - globalWalletLimit
        - mintStages
        - collectionInfo
        - creatorInfo
    WalletDetailDto:
      type: object
      properties:
        count:
          type: number
          description: Count of NFTs
          example: 4827
        weight:
          type: number
          description: Weight percentage
          example: 86.51
        address:
          type: string
          description: Address of the holder
          example: erd1qqqqqqqqqqqqqpgqvpkd3g3uwludduv3797j54qt6c888wa59w2shntt6z
        username:
          type: string
          description: Username of the holder
          example: "Staking: XOXNO"
        type:
          type: string
          description: Type of the holder
          example: staking
      required:
        - count
        - weight
        - address
        - username
        - type
    CollectionHoldersDto:
      type: object
      properties:
        totalSupply:
          type: number
          description: Total supply of NFTs
          example: 5580
        walletDetails:
          type: array
          items:
            $ref: "#/components/schemas/WalletDetailDto"
        onMarket:
          type: object
          description: Details of NFTs on market
          example:
            count: 211
            weight: 3.78
        staked:
          type: object
          description: Details of staked NFTs
          example:
            count: 4827
            weight: 86.51
        otherSCs:
          type: object
          description: Details of NFTs in other smart contracts
          example:
            count: 10
            weight: 0.18
        burnWallet:
          type: object
          description: Details of NFTs in burn wallet
          example:
            count: 0
            weight: 0
        uniqueHolders:
          type: object
          description: Details of unique holders
          example:
            count: 764
            weight: 13.69
        holded:
          type: object
          description: Details of holded NFTs
          example:
            count: 532
            weight: 9.53
            avgPerHodler: 2.18
      required:
        - totalSupply
        - walletDetails
        - onMarket
        - staked
        - otherSCs
        - burnWallet
        - uniqueHolders
        - holded
    CollectionOwnerDto:
      type: object
      properties:
        owner:
          type: string
          description: Owner address
          example: erd10ugfytgdndw5qmnykemjfpd7xrjs63f0r2qjhug0ek9gnfdjxq4s8qjvcx
      required:
        - owner
    DayTradingStatsDto:
      type: object
      properties:
        volume:
          type: number
          description: Trading volume for the day
        volumeMargin:
          type: number
          description: Margin of volume change for the day
        trades:
          type: number
          description: Number of trades for the day
        tradesMargin:
          type: number
          description: Margin of trades change for the day
        minPrice:
          type: number
          description: Minimum price for the day
        maxPrice:
          type: number
          description: Maximum price for the day
        averagePrice:
          type: number
          description: Average price for the day
      required:
        - volume
        - volumeMargin
        - trades
        - tradesMargin
        - minPrice
        - maxPrice
        - averagePrice
    TradingStatsDto:
      type: object
      properties:
        day:
          description: Daily trading statistics
          allOf:
            - $ref: "#/components/schemas/DayTradingStatsDto"
      required:
        - day
    CollectionStatsDto:
      type: object
      properties:
        collection:
          type: string
          description: Identifier of the collection
        tradingStats:
          description: Trading statistics of the collection
          allOf:
            - $ref: "#/components/schemas/TradingStatsDto"
        floorPrice:
          type: number
          description: Current floor price
        listedCount:
          type: number
          description: Number of listed items
        collectionInfo:
          description: Information about the collection
          allOf:
            - $ref: "#/components/schemas/CollectionInfoDto"
      required:
        - collection
        - tradingStats
        - floorPrice
        - listedCount
        - collectionInfo
    ExploreCollectionsStatisticsDto:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: "#/components/schemas/CollectionStatsDto"
        hasMoreResults:
          type: boolean
          example: true
      required:
        - resources
        - hasMoreResults
    AttributeDto:
      type: object
      properties:
        trait_type:
          type: string
          example: Divinity
        value:
          type: string
          example: "95"
      required:
        - trait_type
        - value
    ResourceDto:
      type: object
      properties:
        offerId:
          type: number
          example: 156453
        collection:
          type: string
          example: VPRNFT-0a0ee5
        quantity:
          type: number
          example: 1
        paymentToken:
          type: string
          example: EGLD
        paymentTokenNonce:
          type: number
          example: 0
        price:
          type: string
          example: "800000000000000000"
        priceShort:
          type: number
          example: 0.8
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/AttributeDto"
        owner:
          $ref: "#/components/schemas/OwnerDto"
        timestamp:
          type: number
          example: 1688827110
        marketplace:
          type: string
          example: xoxno
        uniqueKey:
          type: string
          example: VPRNFT-0a0ee5-156453-xoxno-globalOffer
        isActive:
          type: boolean
          example: true
        usdValue:
          type: number
          example: 29.143
      required:
        - offerId
        - collection
        - quantity
        - paymentToken
        - paymentTokenNonce
        - price
        - priceShort
        - attributes
        - owner
        - timestamp
        - marketplace
        - uniqueKey
        - isActive
        - usdValue
    GlobalOffersDto:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: "#/components/schemas/ResourceDto"
        hasMoreResults:
          type: boolean
          example: true
      required:
        - resources
        - hasMoreResults
    CreatorDetailsDto:
      type: object
      properties:
        name:
          type: string
          example: MiceCityClub
        contractAddress:
          type: string
          example: erd1qqqqqqqqqqqqqpgq2t6ef4u9ts3j86504sx0zlvw0vujfq6yys5sqfg40f
        address:
          type: string
          example: erd10ugfytgdndw5qmnykemjfpd7xrjs63f0r2qjhug0ek9gnfdjxq4s8qjvcx
        profile:
          type: string
          example: https://media.xoxno.com/utils/defaultProfilePic.webp
        banner:
          type: string
          example: https://media.xoxno.com/utils/defaultBanner.webp
        joinedDate:
          type: number
          example: 1645192020
        creatorTag:
          type: string
          example: MiceCityClub
        listing:
          type: array
          items:
            $ref: "#/components/schemas/ListingDto"
      required:
        - name
        - contractAddress
        - address
        - profile
        - banner
        - joinedDate
        - creatorTag
        - listing
    Reward:
      type: object
      properties:
        tokenIdentifier:
          type: string
          description: Token identifier
          example: RARE-99e8b0
        tokenNonce:
          type: number
          description: Token nonce
          example: 0
        rewardBalance:
          type: string
          description: Reward balance
          example: "322605500000000000000000"
        rewardBalanceShort:
          type: number
          description: Short reward balance
          example: 322605.5
        rewardPerEpochShort:
          type: number
          description: Reward per epoch short
          example: 8000
        rewardPerDayPerNft:
          type: number
          description: Reward per day per NFT
          example: 1
        usdValue:
          type: number
          description: USD value
          example: 27.64023234925034
      required:
        - tokenIdentifier
        - tokenNonce
        - rewardBalance
        - rewardBalanceShort
        - rewardPerEpochShort
        - rewardPerDayPerNft
        - usdValue
    StakingSummary:
      type: object
      properties:
        poolId:
          type: number
          description: Pool ID
          example: 3
        name:
          type: string
          description: Pool name
          example: SRB - MiceCity
        description:
          type: string
          description: Pool description
          example: The largest staking pool
        stakingEnabled:
          type: boolean
          description: Staking enabled
          example: true
        profile:
          type: string
          description: Profile picture URL
          example: https://media.xoxno.com/stakingpools/3/stakingPoolPicture_3.webp?_ts=1716838395
        collection:
          description: Collection identifiers
          example:
            - MICE-a0c447
            - SRB-61daf7
          type: array
          items:
            type: string
        poolStakedCount:
          type: number
          description: Pool staked count
          example: 5895
        userStakedCount:
          type: number
          description: User staked count
          example: 0
        delegatorCount:
          type: number
          description: Delegator count
          example: 267
        rewardDuration:
          type: number
          description: Reward duration in days
          example: 63
        poolReward:
          description: Pool reward details
          type: array
          items:
            $ref: "#/components/schemas/Reward"
        userReward:
          description: User reward details
          type: array
          items:
            $ref: "#/components/schemas/Reward"
        poolType:
          type: string
          description: Pool type
          example: Duo
        issuingType:
          type: string
          description: Issuing type
          example: Fixed
        unBoundPeriod:
          type: number
          description: Unbound period in days
          example: 0
        hasUnboundPeriod:
          type: boolean
          description: Has unbound period
          example: false
        maxPoolLimit:
          type: number
          description: Max pool limit
          example: 16000
        hasMaxWalletLimit:
          type: boolean
          description: Has max wallet limit
          example: true
        maxWalletLimit:
          type: number
          description: Max wallet limit
          example: 8000
        startEpoch:
          type: number
          description: Start epoch
          example: 1381
        endEpoch:
          type: number
          description: End epoch
          example: 1444
        owner:
          type: string
          description: Pool owner address
          example: erd13sj3r6xuh708nhv6t5tqquznwcve4nhaghwdz9lac0zpmw0qe0hqysg4w6
        currentEpoch:
          type: number
          description: Current epoch
          example: 1442
        isActive:
          type: boolean
          description: Is active flag
          example: true
        daysLeft:
          type: number
          description: Days left for staking
          example: 2
        cutFee:
          type: number
          description: Cut fee percentage
          example: 0
        percentageFilled:
          type: number
          description: Percentage filled
          example: 36.84375
      required:
        - poolId
        - name
        - description
        - stakingEnabled
        - profile
        - collection
        - poolStakedCount
        - userStakedCount
        - delegatorCount
        - rewardDuration
        - poolReward
        - userReward
        - poolType
        - issuingType
        - unBoundPeriod
        - hasUnboundPeriod
        - maxPoolLimit
        - hasMaxWalletLimit
        - maxWalletLimit
        - startEpoch
        - endEpoch
        - owner
        - currentEpoch
        - isActive
        - daysLeft
        - cutFee
        - percentageFilled
    StakingPostDTO:
      type: object
      properties:
        name:
          type: string
          description: Pool name
          example: SRB - MiceCity
        description:
          type: string
          description: Pool description
          example: The largest staking pool
      required:
        - name
        - description
    OwnedCollectionsDto:
      type: object
      properties:
        registered:
          description: List of registered collections
          example:
            - EGIRL-443b95
            - MONKEY-ac9bdf
            - BLZ-1d0442
            - MAFIALEGEN-826144
          type: array
          items:
            type: string
        availableForRegister:
          description: List of collections available for registration
          example:
            - XOXNO-a52799
          type: array
          items:
            type: string
      required:
        - registered
        - availableForRegister
    RewardDto:
      type: object
      properties:
        tokenIdentifier:
          type: string
          description: Token identifier
          example: WXMEX-794dbd
        tokenNonce:
          type: number
          description: Token nonce
          example: 0
        amount:
          type: string
          description: Amount of reward
          example: "140649439520333680917622"
        amountShort:
          type: number
          description: Short amount of reward
          example: 140649.4395
        usdValue:
          type: number
          description: USD value of reward
          example: 0.6295776701542604
      required:
        - tokenIdentifier
        - tokenNonce
        - amount
        - amountShort
        - usdValue
    UserStakingSummaryDto:
      type: object
      properties:
        collection:
          type: string
          description: Collection identifier
          example: MICE-a0c447
        stakedCount:
          type: number
          description: Number of staked items
          example: 21
        name:
          type: string
          description: Name of the collection
          example: MiceCity
        isVerified:
          type: boolean
          description: Verification status
          example: true
        profile:
          type: string
          description: Profile image URL
          example: https://media.xoxno.com/collectionprofile/MICE-a0c447/profilePicture.webp?ts=1679309756
        banner:
          type: string
          description: Banner image URL
          example: https://media.xoxno.com/collectionprofile/MICE-a0c447/profilebanner.webp
        reward:
          description: Rewards information
          type: array
          items:
            $ref: "#/components/schemas/RewardDto"
      required:
        - collection
        - stakedCount
        - name
        - isVerified
        - profile
        - banner
        - reward
    StakingExploreDto:
      type: object
      properties:
        collection:
          type: string
        activePools:
          type: number
        totalPoolStakedCount:
          type: number
        totalDelegatorCount:
          type: number
        rewardTickers:
          type: array
          items:
            type: string
        collectionInfo:
          $ref: "#/components/schemas/CollectionInfoDto"
      required:
        - collection
        - activePools
        - totalPoolStakedCount
        - totalDelegatorCount
        - rewardTickers
        - collectionInfo
    ActivityHistoryDto:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: "#/components/schemas/ResourceDto"
        hasMoreResults:
          type: boolean
          example: true
      required:
        - resources
        - hasMoreResults
    AnalyticsVolumeDto:
      type: object
      properties:
        marketplace:
          type: string
          example: xoxno
        timestamp:
          example:
            - 2024-07-04T00:00:00.0000000Z
            - 2024-07-05T00:00:00.0000000Z
          type: array
          items:
            type: string
        totalEgldVolume:
          example:
            - 169.92
            - 189.7
          type: array
          items:
            type: string
        totalUsdVolume:
          example:
            - 5166.86
            - 5849.23
          type: array
          items:
            type: string
        totalTrades:
          example:
            - 254
            - 290
          type: array
          items:
            type: string
        floorPrice:
          example: []
          type: array
          items:
            type: string
        athPrice:
          example: []
          type: array
          items:
            type: string
        avgPrice:
          example: []
          type: array
          items:
            type: string
      required:
        - marketplace
        - timestamp
        - totalEgldVolume
        - totalUsdVolume
        - totalTrades
        - floorPrice
        - athPrice
        - avgPrice
    AnalyticsVolumeResponseDto:
      type: object
      properties:
        resources:
          type: array
          items:
            $ref: "#/components/schemas/AnalyticsVolumeDto"
      required:
        - resources
    TransactionDetailsDto:
      type: object
      properties:
        price:
          type: number
          example: 0
        txHash:
          type: string
          example: 7bb66ddd5682070b42c6d4a77acc2920ad21680ad73a75a2a531dfed888c6bed
        timestamp:
          type: number
          example: 1642719714
        identifier:
          type: string
          example: BANANA-e955fd-05a0
      required:
        - price
        - txHash
        - timestamp
        - identifier
    AveragePriceDto:
      type: object
      properties:
        price:
          type: number
          example: 0.225
      required:
        - price
    AnalyticsDto:
      type: object
      properties:
        count:
          type: number
          example: 141
        volume:
          type: number
          example: 31.758
        min:
          $ref: "#/components/schemas/TransactionDetailsDto"
        max:
          $ref: "#/components/schemas/TransactionDetailsDto"
        avg:
          $ref: "#/components/schemas/AveragePriceDto"
      required:
        - count
        - volume
        - min
        - max
        - avg
    UserAnalyticsDto:
      type: object
      properties:
        Purchase:
          $ref: "#/components/schemas/AnalyticsDto"
        Sale:
          $ref: "#/components/schemas/AnalyticsDto"
      required:
        - Purchase
        - Sale
    GlobalAnalyticsOverviewResponseDto:
      type: object
      properties:
        userCount:
          type: number
          example: 138418
        listingsCount:
          type: number
          example: 185538
        tradingStats:
          $ref: "#/components/schemas/TradingStatsDto"
      required:
        - userCount
        - listingsCount
        - tradingStats
    PriceDataDto:
      type: object
      properties:
        price:
          type: number
          description: Price of the NFT
        timestamp:
          type: number
          description: Timestamp of the transaction
        identifier:
          type: string
          description: NFT identifier
        txHash:
          type: string
          description: Transaction hash
        usdValue:
          type: number
          description: USD value of the transaction
        nftInfo:
          description: NFT information
          allOf:
            - $ref: "#/components/schemas/NftInfoDto"
      required:
        - price
        - timestamp
        - identifier
        - txHash
        - usdValue
        - nftInfo
    UserStatsDto:
      type: object
      properties:
        wallet:
          description: User wallet information
          allOf:
            - $ref: "#/components/schemas/WalletDto"
        totalVolume:
          type: number
          description: Total trading volume
        totalTrades:
          type: number
          description: Total number of trades
        totalCollections:
          type: number
          description: Total number of collections
        totalNfts:
          type: number
          description: Total number of NFTs
        totalPartners:
          type: number
          description: Total number of partners
        buyerVolume:
          type: number
          description: Buyer volume
        buyerTrades:
          type: number
          description: Buyer trades
        buyerNfts:
          type: number
          description: Buyer NFTs
        buyerCollections:
          type: number
          description: Buyer collections
        buyerPartners:
          type: number
          description: Buyer partners
        buyerMaxPriceData:
          description: Buyer maximum price data
          allOf:
            - $ref: "#/components/schemas/PriceDataDto"
        buyerMinPriceData:
          description: Buyer minimum price data
          allOf:
            - $ref: "#/components/schemas/PriceDataDto"
        sellerVolume:
          type: number
          description: Seller volume
        sellerTrades:
          type: number
          description: Seller trades
        sellerNfts:
          type: number
          description: Seller NFTs
        sellerCollections:
          type: number
          description: Seller collections
        sellerPartners:
          type: number
          description: Seller partners
        sellerMaxPriceData:
          description: Seller maximum price data
          allOf:
            - $ref: "#/components/schemas/PriceDataDto"
        sellerMinPriceData:
          description: Seller minimum price data
          allOf:
            - $ref: "#/components/schemas/PriceDataDto"
      required:
        - wallet
        - totalVolume
        - totalTrades
        - totalCollections
        - totalNfts
        - totalPartners
        - buyerVolume
        - buyerTrades
        - buyerNfts
        - buyerCollections
        - buyerPartners
        - buyerMaxPriceData
        - buyerMinPriceData
        - sellerVolume
        - sellerTrades
        - sellerNfts
        - sellerCollections
        - sellerPartners
        - sellerMaxPriceData
        - sellerMinPriceData
    GetUsersStatsResponseDto:
      type: object
      properties:
        usersStats:
          description: List of user stats
          type: array
          items:
            $ref: "#/components/schemas/UserStatsDto"
      required:
        - usersStats
    TransactionProcessStatus:
      type: object
      properties:
        reason:
          type: string
          description: The error reason
          default: ""
        status:
          type: string
          description: The status of the transaction
          enum:
            - success
            - pending
            - invalid
            - fail
            - notFound
      required:
        - reason
        - status
    TransactionCreate:
      type: object
      properties:
        chainId:
          type: string
          description: The chain ID
        data:
          type: string
          description: The transaction data
        gasLimit:
          type: number
          description: The gas limit for the transaction
        gasPrice:
          type: number
          description: The gas price for the transaction
        nonce:
          type: number
          description: The nonce for the transaction
        receiver:
          type: string
          description: The receiver address
        receiverUsername:
          type: string
          description: The receiver username
        sender:
          type: string
          description: The sender address
        senderUsername:
          type: string
          description: The sender username
        signature:
          type: string
          description: The signature of the transaction
        value:
          type: string
          description: The value of the transaction
        version:
          type: number
          description: The version of the transaction
        options:
          type: number
          description: Optional transaction options
        guardian:
          type: string
          description: Optional guardian address
        guardianSignature:
          type: string
          description: Optional guardian signature
      required:
        - chainId
        - data
        - gasLimit
        - gasPrice
        - nonce
        - receiver
        - sender
        - signature
        - value
        - version
    TransactionSendResult:
      type: object
      properties:
        receiver:
          type: string
          description: The receiver address
        receiverShard:
          type: number
          description: The shard of the receiver
        sender:
          type: string
          description: The sender address
        senderShard:
          type: number
          description: The shard of the sender
        status:
          type: string
          description: The status of the transaction
        txHash:
          type: string
          description: The transaction hash
      required:
        - receiver
        - receiverShard
        - sender
        - senderShard
        - status
        - txHash
    BatchTransactionResponse:
      type: object
      properties:
        status:
          type: string
          description: The status of the transaction
        txHash:
          type: string
          description: The transaction hash
      required:
        - status
        - txHash
    CollectionDto:
      type: object
      properties:
        collection:
          type: string
          example: EAPES-8f3c1f
        name:
          type: string
          example: EAPES
        isVisible:
          type: boolean
          example: true
        isVerified:
          type: boolean
          example: true
        profile:
          type: string
          example: https://media.xoxno.com/collectionprofile/EAPES-8f3c1f/profilePicture.webp?ts=1691359925
        type:
          type: string
          example: NonFungibleESDT
        statistics:
          $ref: "#/components/schemas/StatisticsDto"
        floorPrice:
          type: number
          example: 3.1
      required:
        - collection
        - name
        - isVisible
        - isVerified
        - profile
        - type
        - statistics
        - floorPrice
    UserDto:
      type: object
      properties:
        address:
          type: string
          example: erd10hsfh2xhn4qzatc0vguxgfdu8aegurnep7zzyg0ht9ddw50g5xfq8ccu4q
        herotag:
          type: string
          example: erd1...cu4q
        isVerified:
          type: boolean
          example: false
        profile:
          type: string
          example: https://media.xoxno.com/utils/defaultProfilePic.webp
        isCreator:
          type: boolean
          example: true
        addressTrimmed:
          type: string
          example: erd1...cu4q
      required:
        - address
        - herotag
        - isVerified
        - profile
        - isCreator
        - addressTrimmed
    CreatorDto:
      type: object
      properties:
        address:
          type: string
          example: erd10hsfh2xhn4qzatc0vguxgfdu8aegurnep7zzyg0ht9ddw50g5xfq8ccu4q
        herotag:
          type: string
          example: erd1...cu4q
        addressTrimmed:
          type: string
          example: erd1...cu4q
        isCreator:
          type: boolean
          example: true
        contractAddress:
          type: string
          example: erd1qqqqqqqqqqqqqpgqfnmr778ef8z9mk79rcwzwdhywraahs7hys5sute79u
        name:
          type: string
          example: Ep1xStudio
        creatorTag:
          type: string
          example: Ep1xStudio
        joinedDate:
          type: number
          example: 1643145426
        profile:
          type: string
          example: https://media.xoxno.com/utils/defaultProfilePic.webp
      required:
        - address
        - herotag
        - addressTrimmed
        - isCreator
        - contractAddress
        - name
        - creatorTag
        - joinedDate
        - profile
    GlobalSearchResourcesDto:
      type: object
      properties:
        collections:
          type: array
          items:
            $ref: "#/components/schemas/CollectionDto"
        users:
          type: array
          items:
            $ref: "#/components/schemas/UserDto"
        creators:
          type: array
          items:
            $ref: "#/components/schemas/CreatorDto"
        nft:
          type: array
          items:
            type: object
      required:
        - collections
        - users
        - creators
        - nft
    GlobalSearchResponseDto:
      type: object
      properties:
        count:
          type: number
          example: 30
        hasMoreResults:
          type: boolean
          example: true
        resources:
          $ref: "#/components/schemas/GlobalSearchResourcesDto"
      required:
        - count
        - hasMoreResults
        - resources
    ChatMessageReplyDto:
      type: object
      properties:
        sender:
          type: string
          description: Message sender
        content:
          description: Message value
          allOf:
            - $ref: "#/components/schemas/ChatMessageReplyDto"
        timestamp:
          type: number
          description: Message timestamp
        id:
          type: string
          description: Message id
      required:
        - sender
        - content
        - timestamp
        - id
    ChatMessageContentDto:
      type: object
      properties:
        type:
          type: string
          description: Message type
        value:
          type: string
          description: Message value
        replyTo:
          description: Message reply to user
          allOf:
            - $ref: "#/components/schemas/ChatMessageReplyDto"
      required:
        - type
        - value
        - replyTo
    SendChatMessageDto:
      type: object
      properties:
        sender:
          type: string
        content:
          $ref: "#/components/schemas/ChatMessageContentDto"
        receiver:
          type: string
      required:
        - sender
        - content
        - receiver
    ProfileDto:
      type: object
      properties:
        address:
          type: string
          example: erd1fmd662htrgt07xxd8me09newa9s0euzvpz3wp0c4pz78f83grt9qm6pn57
        username:
          type: string
          example: "@mihaieremia"
        profile:
          type: string
          example: https://media.xoxno.com/collectionprofile/erd1fmd662htrgt07xxd8me09newa9s0euzvpz3wp0c4pz78f83grt9qm6pn57/profilePicture.webp?ts=1718876966
      required:
        - address
        - username
        - profile
    MessageContentDto:
      type: object
      properties:
        type:
          type: string
          example: message
        value:
          type: string
          example: Vv
        replyTo:
          type: object
      required:
        - type
        - value
    MessageDto:
      type: object
      properties:
        content:
          $ref: "#/components/schemas/MessageContentDto"
        isRead:
          type: boolean
          example: true
        timestamp:
          type: number
          example: 1720468991
      required:
        - content
        - isRead
        - timestamp
    ChatMessageDto:
      type: object
      properties:
        dataType:
          type: string
          example: message
        chatId:
          type: string
          example: a0vzrplk37ls7swz5ypz78f83grt9qm6pn57
        receiver:
          $ref: "#/components/schemas/ProfileDto"
        sender:
          $ref: "#/components/schemas/ProfileDto"
        isGroupChat:
          type: boolean
          example: false
        message:
          $ref: "#/components/schemas/MessageDto"
        id:
          type: string
          example: b02f639a-abcf-4db8-9397-bdb3b60cef6a
        chatName:
          type: string
          example: "@mihaieremia"
      required:
        - dataType
        - chatId
        - receiver
        - sender
        - isGroupChat
        - message
        - id
        - chatName
    ChatConversationDto:
      type: object
      properties:
        dataType:
          type: string
          example: conversation
        chatId:
          type: string
          example: a0vzrplk37ls7swz5y1z78283grt4qm6pn57
        sender:
          $ref: "#/components/schemas/ProfileDto"
        receiver:
          $ref: "#/components/schemas/ProfileDto"
        isGroupChat:
          type: boolean
          example: false
        message:
          $ref: "#/components/schemas/MessageDto"
        id:
          type: string
          example: a0vzrplk37ls7swz5ypz78f83grt9qm6pn57
        chatName:
          type: string
          example: erd1...wz5y
        unreadCount:
          type: number
          example: 0
      required:
        - dataType
        - chatId
        - sender
        - receiver
        - isGroupChat
        - message
        - id
        - chatName
        - unreadCount
    FetchChatConversationsSummaryDto:
      type: object
      properties:
        hasMoreResults:
          type: boolean
          example: false
        resources:
          type: array
          items:
            $ref: "#/components/schemas/ChatConversationDto"
      required:
        - hasMoreResults
        - resources
    FetchChatMessagesDto:
      type: object
      properties:
        hasMoreResults:
          type: boolean
          example: false
        receiver:
          $ref: "#/components/schemas/ProfileDto"
        resources:
          type: array
          items:
            $ref: "#/components/schemas/ChatMessageDto"
      required:
        - hasMoreResults
        - receiver
        - resources
    UnreadMessageCountByChatIdDto:
      type: object
      properties:
        unreadCount:
          type: number
          example: 1
        chatId:
          type: string
          example: 49vtvdnn9w2stmwm7lpz78f83grt9qm6pn57
      required:
        - unreadCount
        - chatId
    GlobalConversationSummaryDto:
      type: object
      properties:
        totalUnreadChats:
          type: number
          example: 1
        totalUnreadMessages:
          type: number
          example: 1
        unreadMessageCountByChatId:
          type: array
          items:
            $ref: "#/components/schemas/UnreadMessageCountByChatIdDto"
      required:
        - totalUnreadChats
        - totalUnreadMessages
        - unreadMessageCountByChatId
    BlockedChatResourceDto:
      type: object
      properties:
        dataType:
          type: string
          example: blockedUser
        timestamp:
          type: number
          example: 1720734463
        sender:
          $ref: "#/components/schemas/OwnerDto"
        receiver:
          $ref: "#/components/schemas/OwnerDto"
        id:
          type: string
          example: erd1fmd662htrgt07xxd8me09newa9s0euzvpz3wp0c4pz78f83grt9qm6pn57
        chatName:
          type: string
          example: erd1...wm7l
      required:
        - dataType
        - timestamp
        - sender
        - receiver
        - id
        - chatName
    FetchBlockedChatsDto:
      type: object
      properties:
        hasMoreResults:
          type: boolean
          example: false
        resources:
          type: array
          items:
            $ref: "#/components/schemas/BlockedChatResourceDto"
      required:
        - hasMoreResults
        - resources
    WebSocketTokenDto:
      type: object
      properties:
        token:
          type: string
          description: WebSocket connection token
      required:
        - token
    RangeFilter:
      type: object
      properties:
        min:
          type: number
        max:
          type: number
        field:
          type: string
    ActivityDataDto:
      type: object
      properties:
        collection:
          type: array
          items:
            type: string
          example:
            - collection1
        identifier:
          type: array
          items:
            type: string
          example:
            - identifier1
    NftActivityFilterCriteriaDto:
      type: object
      properties:
        txHash:
          type: array
          items:
            type: string
        activityAddress:
          type: array
          items:
            type: string
        from:
          type: array
          items:
            type: string
        to:
          type: array
          items:
            type: string
        activityType:
          type: array
          example:
            - listingCreate
          items:
            type: string
            enum:
              - nftCreate
              - nftBurn
              - nftUpdate
              - nftTransfer
              - listingCreate
              - listingWithdraw
              - listingUpdate
              - auctionBid
              - auctionOutBid
              - offerCreate
              - offerWithdraw
              - offerReject
              - globalOfferCreate
              - globalOfferWithdraw
              - trade
              - bulkTrade
              - auctionTrade
              - otherTrade
              - offerTrade
              - globalOfferTrade
              - stake
              - unStake
        source:
          type: array
          items:
            type: string
            enum:
              - mvxBuiltIn
              - xoxno
              - frameit
              - deadrare
              - krogan
              - xoxnoLaunchpad
              - xoxnoStaking
              - xoxnoP2P
              - xoxnoLs
        range:
          type: array
          items:
            $ref: "#/components/schemas/RangeFilter"
        activityData:
          $ref: "#/components/schemas/ActivityDataDto"
    NftActivityFilter:
      type: object
      properties:
        select:
          type: array
          items:
            type: string
          default: []
        orderBy:
          type: array
          items:
            type: string
          default: []
        includeCount:
          type: boolean
        top:
          type: number
          default: 25
        skip:
          type: number
          default: 0
        filters:
          default: {}
          allOf:
            - $ref: "#/components/schemas/NftActivityFilterCriteriaDto"
        strictSelect:
          type: boolean
          default: false
    CollectionOffersFilter:
      type: object
      properties:
        select:
          type: array
          items:
            type: string
          default: []
        orderBy:
          type: array
          items:
            type: string
          default: []
        includeCount:
          type: boolean
        top:
          type: number
          default: 25
        skip:
          type: number
          default: 0
        filters:
          type: CollectionOffersFilterCriteriaDto
          default: {}
    NftMetadataAttributes:
      type: object
      properties:
        trait_type:
          type: string
        value:
          type: string
      required:
        - trait_type
        - value
    CollectionOffersFilterCriteriaDto:
      type: object
      properties:
        dataType:
          type: string
          enum:
            - collectionProfile
            - globalOffer
            - mintProfile
            - mintStage
            - collectionStats
            - collectionVerification
          example: globalOffer
        collection:
          example:
            - collection1
          type: array
          items:
            type: string
        offerId:
          example:
            - 123
          type: array
          items:
            type: number
        owner:
          example:
            - owner1
          type: array
          items:
            type: string
        marketplace:
          example:
            - marketplace1
          type: array
          items:
            type: string
        range:
          type: array
          items:
            $ref: "#/components/schemas/RangeFilter"
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/NftMetadataAttributes"
        isActive:
          type: boolean
          example: true
        withAttributes:
          type: boolean
          example: true
    CollectionStatsFilterCriteriaDto:
      type: object
      properties:
        dataType:
          type: string
          enum:
            - collectionProfile
            - globalOffer
            - mintProfile
            - mintStage
            - collectionStats
            - collectionVerification
          example: collectionStats
        collection:
          type: array
          items:
            type: string
        verifiedOnly:
          type: boolean
          example: true
        range:
          type: array
          items:
            $ref: "#/components/schemas/RangeFilter"
    CollectionStatsFilter:
      type: object
      properties:
        select:
          type: array
          items:
            type: string
          default: []
        orderBy:
          type: array
          items:
            type: string
          default: []
        includeCount:
          type: boolean
        top:
          type: number
          default: 25
        skip:
          type: number
          default: 0
        filters:
          default: {}
          allOf:
            - $ref: "#/components/schemas/CollectionStatsFilterCriteriaDto"
        strictSelect:
          type: boolean
          default: false
      required:
        - filters
    SaleInfoFilterDto:
      type: object
      properties:
        seller:
          type: array
          items:
            type: string
        paymentToken:
          type: array
          items:
            type: string
        marketplace:
          example:
            - xoxno
          type: array
          items:
            type: string
        auctionType:
          type: array
          items:
            type: string
    NftDocFilterCriteriaDto:
      type: object
      properties:
        dataType:
          type: array
          items:
            type: string
        identifier:
          type: array
          items:
            type: string
        collection:
          type: array
          items:
            type: string
        nonce:
          type: array
          items:
            type: number
        type:
          type: array
          items:
            type: string
        onSale:
          type: boolean
          example: true
        owner:
          type: array
          items:
            type: string
        currentOwner:
          type: array
          items:
            type: string
        saleInfo:
          $ref: "#/components/schemas/SaleInfoFilterDto"
        range:
          type: array
          items:
            $ref: "#/components/schemas/RangeFilter"
        metadata:
          $ref: "#/components/schemas/MetadataDto"
        wasProcessed:
          type: boolean
          example: true
        cp_staked:
          type: boolean
          example: true
        activeAuction:
          type: boolean
          example: true
        verifiedOnly:
          type: boolean
          example: true
        sftOriginalDoc:
          type: boolean
          example: true
    NftDocFilter:
      type: object
      properties:
        select:
          type: array
          items:
            type: string
          default: []
        orderBy:
          type: array
          items:
            type: string
          default: []
        includeCount:
          type: boolean
          default: false
        top:
          type: number
          default: 25
        skip:
          type: number
          default: 0
        filters:
          default: {}
          allOf:
            - $ref: "#/components/schemas/NftDocFilterCriteriaDto"
        strictSelect:
          type: boolean
          default: false
        applyNftExtraDetails:
          type: boolean
      required:
        - filters